{"mappings":"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","sources":["<anon>","src/javascript/loadQuestion.js"],"sourcesContent":["let questions = [];\ndocument.querySelector(\".submitQuiz\").addEventListener(\"click\", ()=>{\n    submitQuiz();\n});\ndocument.querySelector(\".parseQuestions\").addEventListener(\"click\", ()=>{\n    parseQuestions();\n});\ndocument.querySelector(\".section-loadQuestions__top--loadFile\").addEventListener(\"click\", ()=>{\n    loadFile();\n});\nfunction loadFile() {\n    const fileInput = document.getElementById(\"fileInput\");\n    const file = fileInput.files[0];\n    if (file) {\n        const reader = new FileReader();\n        reader.onload = function(event) {\n            const text = event.target.result;\n            document.getElementById(\"questionInput\").value = text;\n        };\n        reader.readAsText(file);\n    } else alert(\"Please select a file.\");\n}\nfunction parseQuestions() {\n    const text = document.getElementById(\"questionInput\").value;\n    questions = [];\n    const lines = text.split(\"\\n\");\n    let currentQuestion = null;\n    lines.forEach((line)=>{\n        line = line.trim();\n        if (line.startsWith(\"C\\xe2u \")) {\n            if (currentQuestion) questions.push(currentQuestion);\n            currentQuestion = {\n                text: line,\n                answers: []\n            };\n        } else if (/^[A-D]\\./.test(line)) {\n            let correct = false;\n            let answerText = line.trim();\n            if (answerText[3] === \"*\") {\n                correct = true;\n                answerText = removeCharAt(answerText, 3);\n            }\n            if (currentQuestion) currentQuestion.answers.push({\n                text: answerText,\n                correct: correct\n            });\n        }\n    });\n    if (currentQuestion) questions.push(currentQuestion);\n    displayQuestions();\n}\nfunction displayQuestions() {\n    const container = document.getElementById(\"section-listQuestions__list-questions\");\n    container.innerHTML = \"\";\n    questions.forEach((question, index)=>{\n        const questionDiv = document.createElement(\"div\");\n        questionDiv.className = \"questions\";\n        questionDiv.innerHTML = `\r\n      <p>${question.text}</p>\r\n      ${question.answers.map((answer, i)=>`\r\n          <input type=\"radio\" id=\"answer${index}-${i}\" name=\"question${index}\" class=\"custom-radio\">\r\n          <label for=\"answer${index}-${i}\">${answer.text}</label><br>\r\n        `).join(\"\")}\r\n    `;\n        container.appendChild(questionDiv);\n        //xet animate cho phan tu\n        window.addEventListener(\"scroll\", function() {\n            // tra ve khoang cach tu top cua phan tu toi viewport\n            var elementTop = questionDiv.getBoundingClientRect().top;\n            var windowHeight = window.innerHeight;\n            if (elementTop < windowHeight * 0.85) questionDiv.classList.add(\"slide-up\");\n        });\n    });\n}\nfunction removeCharAt(str, position) {\n    return str.slice(0, position) + str.slice(position + 1);\n}\nfunction submitQuiz() {\n    const container = document.getElementById(\"section-listQuestions__list-questions\");\n    let score = 0;\n    questions.forEach((question, index)=>{\n        const selected = container.querySelector(`input[name=\"question${index}\"]:checked`);\n        question.answers.forEach((answer, i)=>{\n            const label = container.querySelector(`label[for=\"answer${index}-${i}\"]`);\n            if (answer.correct) label.style.color = \"green\"; // Đáp án đúng tô màu xanh\n            else label.style.color = \"red\"; // Đáp án sai tô màu đỏ\n        });\n        if (selected && question.answers[selected.id.split(\"-\")[1]].correct) score++;\n    });\n    alert(`Your score is: ${score} out of ${questions.length}`);\n}\n\n//# sourceMappingURL=quiiz.4c92a6fe.js.map\n","let questions = [];\r\n\r\ndocument.querySelector(\".submitQuiz\").addEventListener(\"click\", () => {\r\n  submitQuiz();\r\n});\r\ndocument.querySelector(\".parseQuestions\").addEventListener(\"click\", () => {\r\n  parseQuestions();\r\n});\r\ndocument.querySelector(\".section-loadQuestions__top--loadFile\").addEventListener(\"click\", () => {\r\n  loadFile();\r\n});\r\n\r\nfunction loadFile() {\r\n  const fileInput = document.getElementById(\"fileInput\");\r\n  const file = fileInput.files[0];\r\n\r\n  if (file) {\r\n    const reader = new FileReader();\r\n    reader.onload = function (event) {\r\n      const text = event.target.result;\r\n      document.getElementById(\"questionInput\").value = text;\r\n    };\r\n    reader.readAsText(file);\r\n  } else {\r\n    alert(\"Please select a file.\");\r\n  }\r\n}\r\n\r\nfunction parseQuestions() {\r\n  const text = document.getElementById(\"questionInput\").value;\r\n  questions = [];\r\n\r\n  const lines = text.split(\"\\n\");\r\n  let currentQuestion = null;\r\n\r\n  lines.forEach((line) => {\r\n    line = line.trim();\r\n    if (line.startsWith(\"Câu \")) {\r\n      if (currentQuestion) {\r\n        questions.push(currentQuestion);\r\n      }\r\n      currentQuestion = { text: line, answers: [] };\r\n    } else if (/^[A-D]\\./.test(line)) {\r\n      let correct = false;\r\n      let answerText = line.trim();\r\n      if (answerText[3] === \"*\") {\r\n        correct = true;\r\n        answerText = removeCharAt(answerText, 3);\r\n      }\r\n      if (currentQuestion) {\r\n        currentQuestion.answers.push({\r\n          text: answerText,\r\n          correct: correct,\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  if (currentQuestion) {\r\n    questions.push(currentQuestion);\r\n  }\r\n  displayQuestions();\r\n}\r\n\r\nfunction displayQuestions() {\r\n  const container = document.getElementById(\"section-listQuestions__list-questions\");\r\n  container.innerHTML = \"\";\r\n  questions.forEach((question, index) => {\r\n    const questionDiv = document.createElement(\"div\");\r\n    questionDiv.className = \"questions\";\r\n    questionDiv.innerHTML = `\r\n      <p>${question.text}</p>\r\n      ${question.answers\r\n        .map(\r\n          (answer, i) => `\r\n          <input type=\"radio\" id=\"answer${index}-${i}\" name=\"question${index}\" class=\"custom-radio\">\r\n          <label for=\"answer${index}-${i}\">${answer.text}</label><br>\r\n        `\r\n        )\r\n        .join(\"\")}\r\n    `;\r\n    container.appendChild(questionDiv);\r\n    //xet animate cho phan tu\r\n    window.addEventListener(\"scroll\", function() {\r\n      // tra ve khoang cach tu top cua phan tu toi viewport\r\n     var elementTop = questionDiv.getBoundingClientRect().top;\r\n     var windowHeight = window.innerHeight;\r\n \r\n     if (elementTop < windowHeight * 0.85) {\r\n         questionDiv.classList.add(\"slide-up\");\r\n     }\r\n  });\r\n});\r\n}\r\n\r\nfunction removeCharAt(str, position) {\r\n  return str.slice(0, position) + str.slice(position + 1);\r\n}\r\n\r\nfunction submitQuiz() {\r\n  const container = document.getElementById(\"section-listQuestions__list-questions\");\r\n  let score = 0;\r\n  questions.forEach((question, index) => {\r\n    const selected = container.querySelector(`input[name=\"question${index}\"]:checked`);\r\n    question.answers.forEach((answer, i) => {\r\n      const label = container.querySelector(`label[for=\"answer${index}-${i}\"]`);\r\n      if (answer.correct) {\r\n        label.style.color = \"green\";  // Đáp án đúng tô màu xanh\r\n      } else {\r\n        label.style.color = \"red\";  // Đáp án sai tô màu đỏ\r\n      }\r\n    });\r\n    if (selected && question.answers[selected.id.split('-')[1]].correct) {\r\n      score++;\r\n    }\r\n  });\r\n  alert(`Your score is: ${score} out of ${questions.length}`);\r\n}\r\n"],"names":["questions","document","querySelector","addEventListener","submitQuiz","container","getElementById","score","forEach","question","index","selected","answers","answer","i","label","correct","style","color","id","split","alert","length","parseQuestions","text","value","lines","currentQuestion","line","trim","startsWith","push","test","str","answerText","slice","position","displayQuestions","innerHTML","questionDiv","createElement","className","map","join","appendChild","window","getBoundingClientRect","top","windowHeight","innerHeight","classList","add","loadFile","file","fileInput","files","reader","FileReader","onload","event","target","result","readAsText"],"version":3,"file":"quiiz.4c92a6fe.js.map"}